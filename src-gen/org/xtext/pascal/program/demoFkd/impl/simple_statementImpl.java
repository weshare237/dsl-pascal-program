/**
 * generated by Xtext 2.26.0
 */
package org.xtext.pascal.program.demoFkd.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.pascal.program.demoFkd.DemoFkdPackage;
import org.xtext.pascal.program.demoFkd.assignment_statement;
import org.xtext.pascal.program.demoFkd.function_designator;
import org.xtext.pascal.program.demoFkd.goto_statement;
import org.xtext.pascal.program.demoFkd.simple_statement;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>simple statement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.pascal.program.demoFkd.impl.simple_statementImpl#getAssignment <em>Assignment</em>}</li>
 *   <li>{@link org.xtext.pascal.program.demoFkd.impl.simple_statementImpl#getFunction <em>Function</em>}</li>
 *   <li>{@link org.xtext.pascal.program.demoFkd.impl.simple_statementImpl#getGoto <em>Goto</em>}</li>
 *   <li>{@link org.xtext.pascal.program.demoFkd.impl.simple_statementImpl#getFunction_noargs <em>Function noargs</em>}</li>
 * </ul>
 *
 * @generated
 */
public class simple_statementImpl extends MinimalEObjectImpl.Container implements simple_statement
{
  /**
   * The cached value of the '{@link #getAssignment() <em>Assignment</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAssignment()
   * @generated
   * @ordered
   */
  protected assignment_statement assignment;

  /**
   * The cached value of the '{@link #getFunction() <em>Function</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunction()
   * @generated
   * @ordered
   */
  protected function_designator function;

  /**
   * The cached value of the '{@link #getGoto() <em>Goto</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGoto()
   * @generated
   * @ordered
   */
  protected goto_statement goto_;

  /**
   * The default value of the '{@link #getFunction_noargs() <em>Function noargs</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunction_noargs()
   * @generated
   * @ordered
   */
  protected static final String FUNCTION_NOARGS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFunction_noargs() <em>Function noargs</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunction_noargs()
   * @generated
   * @ordered
   */
  protected String function_noargs = FUNCTION_NOARGS_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected simple_statementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DemoFkdPackage.Literals.SIMPLE_STATEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public assignment_statement getAssignment()
  {
    return assignment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAssignment(assignment_statement newAssignment, NotificationChain msgs)
  {
    assignment_statement oldAssignment = assignment;
    assignment = newAssignment;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DemoFkdPackage.SIMPLE_STATEMENT__ASSIGNMENT, oldAssignment, newAssignment);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAssignment(assignment_statement newAssignment)
  {
    if (newAssignment != assignment)
    {
      NotificationChain msgs = null;
      if (assignment != null)
        msgs = ((InternalEObject)assignment).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DemoFkdPackage.SIMPLE_STATEMENT__ASSIGNMENT, null, msgs);
      if (newAssignment != null)
        msgs = ((InternalEObject)newAssignment).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DemoFkdPackage.SIMPLE_STATEMENT__ASSIGNMENT, null, msgs);
      msgs = basicSetAssignment(newAssignment, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DemoFkdPackage.SIMPLE_STATEMENT__ASSIGNMENT, newAssignment, newAssignment));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public function_designator getFunction()
  {
    return function;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFunction(function_designator newFunction, NotificationChain msgs)
  {
    function_designator oldFunction = function;
    function = newFunction;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DemoFkdPackage.SIMPLE_STATEMENT__FUNCTION, oldFunction, newFunction);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFunction(function_designator newFunction)
  {
    if (newFunction != function)
    {
      NotificationChain msgs = null;
      if (function != null)
        msgs = ((InternalEObject)function).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DemoFkdPackage.SIMPLE_STATEMENT__FUNCTION, null, msgs);
      if (newFunction != null)
        msgs = ((InternalEObject)newFunction).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DemoFkdPackage.SIMPLE_STATEMENT__FUNCTION, null, msgs);
      msgs = basicSetFunction(newFunction, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DemoFkdPackage.SIMPLE_STATEMENT__FUNCTION, newFunction, newFunction));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public goto_statement getGoto()
  {
    return goto_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetGoto(goto_statement newGoto, NotificationChain msgs)
  {
    goto_statement oldGoto = goto_;
    goto_ = newGoto;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DemoFkdPackage.SIMPLE_STATEMENT__GOTO, oldGoto, newGoto);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setGoto(goto_statement newGoto)
  {
    if (newGoto != goto_)
    {
      NotificationChain msgs = null;
      if (goto_ != null)
        msgs = ((InternalEObject)goto_).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DemoFkdPackage.SIMPLE_STATEMENT__GOTO, null, msgs);
      if (newGoto != null)
        msgs = ((InternalEObject)newGoto).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DemoFkdPackage.SIMPLE_STATEMENT__GOTO, null, msgs);
      msgs = basicSetGoto(newGoto, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DemoFkdPackage.SIMPLE_STATEMENT__GOTO, newGoto, newGoto));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getFunction_noargs()
  {
    return function_noargs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFunction_noargs(String newFunction_noargs)
  {
    String oldFunction_noargs = function_noargs;
    function_noargs = newFunction_noargs;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DemoFkdPackage.SIMPLE_STATEMENT__FUNCTION_NOARGS, oldFunction_noargs, function_noargs));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DemoFkdPackage.SIMPLE_STATEMENT__ASSIGNMENT:
        return basicSetAssignment(null, msgs);
      case DemoFkdPackage.SIMPLE_STATEMENT__FUNCTION:
        return basicSetFunction(null, msgs);
      case DemoFkdPackage.SIMPLE_STATEMENT__GOTO:
        return basicSetGoto(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DemoFkdPackage.SIMPLE_STATEMENT__ASSIGNMENT:
        return getAssignment();
      case DemoFkdPackage.SIMPLE_STATEMENT__FUNCTION:
        return getFunction();
      case DemoFkdPackage.SIMPLE_STATEMENT__GOTO:
        return getGoto();
      case DemoFkdPackage.SIMPLE_STATEMENT__FUNCTION_NOARGS:
        return getFunction_noargs();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DemoFkdPackage.SIMPLE_STATEMENT__ASSIGNMENT:
        setAssignment((assignment_statement)newValue);
        return;
      case DemoFkdPackage.SIMPLE_STATEMENT__FUNCTION:
        setFunction((function_designator)newValue);
        return;
      case DemoFkdPackage.SIMPLE_STATEMENT__GOTO:
        setGoto((goto_statement)newValue);
        return;
      case DemoFkdPackage.SIMPLE_STATEMENT__FUNCTION_NOARGS:
        setFunction_noargs((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DemoFkdPackage.SIMPLE_STATEMENT__ASSIGNMENT:
        setAssignment((assignment_statement)null);
        return;
      case DemoFkdPackage.SIMPLE_STATEMENT__FUNCTION:
        setFunction((function_designator)null);
        return;
      case DemoFkdPackage.SIMPLE_STATEMENT__GOTO:
        setGoto((goto_statement)null);
        return;
      case DemoFkdPackage.SIMPLE_STATEMENT__FUNCTION_NOARGS:
        setFunction_noargs(FUNCTION_NOARGS_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DemoFkdPackage.SIMPLE_STATEMENT__ASSIGNMENT:
        return assignment != null;
      case DemoFkdPackage.SIMPLE_STATEMENT__FUNCTION:
        return function != null;
      case DemoFkdPackage.SIMPLE_STATEMENT__GOTO:
        return goto_ != null;
      case DemoFkdPackage.SIMPLE_STATEMENT__FUNCTION_NOARGS:
        return FUNCTION_NOARGS_EDEFAULT == null ? function_noargs != null : !FUNCTION_NOARGS_EDEFAULT.equals(function_noargs);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (function_noargs: ");
    result.append(function_noargs);
    result.append(')');
    return result.toString();
  }

} //simple_statementImpl
